import Head from "next/head";
import Link from "next/link";
import React from "react";
import SinglePost from "../../../../../components/Blog/SinglePost";
import Pagination from "../../../../../components/Pagination/Pagination";
import Tag from "../../../../../components/Tag/Tag";
import {
  getAllPosts,
  getAllTags,
  getNumberOfPages,
  getNumberOfPagesByTag,
  getPostsByPage,
  getPostsByTagAndPage,
} from "../../../../../lib/notion";

export const getStaticPaths = async (context) => {
  //https://github.com/otoyo/astro-notion-blog/blob/main/src/pages/blog/tag/%5Btag%5D/page/%5Bpage%5D.astro
  const allTags = await getAllTags();

  let params = [];

  await Promise.all(
    allTags.map((tag) => {
      return getNumberOfPagesByTag(tag).then((numberOfPages: number) => {
        for (let i = 1; i <= numberOfPages; i++) {
          params.push({ params: { tag: tag, page: i.toString() } });
        }
      });
    })
  );

  /* TODO:正常なパスに修正 */
  // console.log(params);

  return {
    paths: params,
    fallback: "blocking",
  };
};

export const getStaticProps = async (context) => {
  //何ページ目の記事を持ってくるのか
  const currentPage = context.params?.page.toString();
  const currentTag = context.params?.tag.toString();
  // console.log(currentTag);

  /* Tag用ページ取得に変更 */
  const data = await getPostsByTagAndPage(
    currentTag,
    parseInt(currentPage, 10)
  ); //page ... 今見てるページ番号
  //これの値の取得がおかしかも..?
  const numberOfPages = await getNumberOfPagesByTag(currentTag);

  return {
    props: {
      posts: data,
      currentPage: currentPage,
      curretTag: currentTag,
      numberOfPages: numberOfPages,
    },
    revalidate: 10, //60s毎にISR発動
  };
};

const BlogTagPageList = ({ posts, currentPage, numberOfPages, currentTag }) => {
  return (
    <div className="container h-full w-full mx-auto font-Zen">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="contianer w-full mt-16">
        <h1 className="text-5xl text-dark-100 mb-16 text-center font-medium">
          Notion Blog🚀
        </h1>
        {/* page番号に応じて内容を変える */}
        <section className="sm:grid grid-cols-2 gap-3 w-5/6 mx-auto">
          {posts.map((post, index) => (
            <div className="block" key={index}>
              <SinglePost
                slug={post.slug}
                title={post.title}
                date={post.date}
                description={post.description}
                tag={post.tags}
                isPageList={true}
              />
            </div>
          ))}
        </section>
        <Pagination
          currentPage={parseInt(currentPage, 10)}
          numberOfPage={numberOfPages}
          tag={currentTag}
        />
      </main>
    </div>
  );
};

export default BlogTagPageList;
